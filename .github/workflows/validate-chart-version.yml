name: Validate and Sync with ArgoCD

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main
    paths:
      - 'elma365-appsets/apps/elma365/chart-version.yaml'
      - 'elma365-appsets/apps/elma365-dbs/values-elma365-dbs.yaml'

jobs:
  validate:
    name: Validate Chart Versions & Values
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Read elma365 version
        id: version
        run: |
          VERSION=$(yq e '.data.version' elma365-appsets/apps/elma365/chart-version.yaml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Validate elma365 chart version exists
        run: |
          helm repo add elma365 https://charts.elma365.tech
          helm repo update
          helm search repo elma365/elma365 --version ${{ steps.version.outputs.version }}

  auto-merge:
    name: Auto Merge PR → main (on approval)
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    steps:
      - name: Enable auto-merge (via GitHub API)
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            if (pr.state === "open") {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: "squash"
              });
              console.log("✅ PR merged successfully.");
            }


  notify-argocd:
    name: Notify ArgoCD to sync
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [validate]
    steps:
      - name: Trigger ArgoCD Sync via CLI
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: |
          curl -k -s -X POST \
            -u "$ARGOCD_USERNAME:$ARGOCD_PASSWORD" \
            "$ARGOCD_SERVER/api/v1/apps/elma365/sync"
