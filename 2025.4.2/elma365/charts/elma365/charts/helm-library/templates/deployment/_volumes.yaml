{{- define "helm-library.deployment.volumeMounts" }}
{{- $poolCfgExists := "false" }}
{{- if .Values.global.workerPoolConfigMapName }}
  {{- $configMap := lookup "v1" "ConfigMap" .Release.Namespace (default "" .Values.global.workerPoolConfigMapName) }}
  {{- if $configMap }}
    {{- $poolCfgExists = "true" }}
  {{- end }}
{{- end }}
{{- if eq $poolCfgExists "true" }}
{{ $filePath := printf "%s/%s" .Values.global.workerPoolConfigFileDirectory .Values.global.workerPoolConfigFileName | quote }}
volumeMounts:
  - name: worker-pool-cfg
    mountPath: {{ $filePath }}
    readOnly: true
{{- end }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumeMounts:
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes" }}
{{- $poolCfgExists := "false" }}
{{- if .Values.global.workerPoolConfigMapName }}
  {{- $configMap := lookup "v1" "ConfigMap" .Release.Namespace (default "" .Values.global.workerPoolConfigMapName) }}
  {{- if $configMap }}
    {{- $poolCfgExists = "true" }}
  {{- end }}
{{- end }}
{{- if eq $poolCfgExists "true" }}
volumes:
  - name: worker-pool-cfg
    configMap:
      name: {{ .Values.global.workerPoolConfigMapName }}
{{- end }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumes:
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-billing" }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumeMounts:
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-billing" }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
volumes:
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-notifier" }}
volumeMounts:
{{- if .Values.appconfig.push.fcmKey }}
  - name: notifier
    subPath: {{ base .Values.appconfig.push.keyPath }}
    mountPath: {{ .Values.appconfig.push.keyPath }}
    readOnly: true
{{- end }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-notifier" }}
volumes:
{{- if .Values.appconfig.push.fcmKey }}
  - name: notifier
    secret:
      secretName: notifier
      items:
        - key: FCM_KEY
          path: {{ base .Values.appconfig.push.keyPath }}
{{- end }}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-dumper" }}
volumeMounts:
  - name: dumps
    mountPath: /tmp/dumps
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-dumper" }}
volumes:
  - name: dumps
    emptyDir: {}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{- define "helm-library.deployment.volumeMounts-dottemplater" }}
volumeMounts:
  - name: barcode
    mountPath: /tmp/barcode
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    subPath: elma365-onpremise-ca.pem
    mountPath: /etc/ssl/certs/elma365-onpremise-ca.pem
    readOnly: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{- define "helm-library.deployment.volumes-dottemplater" }}
volumes:
  - name: barcode
    emptyDir: {}
{{- if eq .Values.global.solution "onPremise" }}
{{- if .Values.global.ingress }}
{{- if .Values.global.ingress.onpremiseTls }}
{{- if .Values.global.ingress.onpremiseTls.enabledCA }}
  - name: elma365-onpremise-ca
    configMap:
      name: {{ .Values.global.ingress.onpremiseTls.configCA }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
