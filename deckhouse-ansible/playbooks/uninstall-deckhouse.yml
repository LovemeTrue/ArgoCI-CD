# playbooks/playbook-deckhouse.yml
- name: Генерация Deckhouse config.yml
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Подготовить config.yml
      template:
        src: templates/config.yml.j2
        dest: ./config.yml

- name: Установка Docker (только для Linux)
  hosts: localhost
  gather_facts: yes
  become: true
  tasks:
    - name: Проверка ОС и версии
      ansible.builtin.set_fact:
        os_family: "{{ ansible_distribution }}"
        is_linux: "{{ ansible_system == 'Linux' }}"

    - name: Сообщить, что Docker уже установлен (macOS)
      ansible.builtin.debug:
        msg: "Docker уже установлен через Docker Desktop (macOS)"
      when: not is_linux

    - name: Проверить, установлен ли Docker
      ansible.builtin.stat:
        path: /usr/bin/docker
      register: docker_stat
      when: is_linux

    - name: Установить Docker под Ubuntu
      include_tasks: ../tasks/docker-ubuntu.yml
      when: is_linux and not docker_stat.stat.exists and os_family == 'Ubuntu'

    - name: Установить Docker под Debian
      include_tasks: ../tasks/docker-debian.yml
      when: is_linux and not docker_stat.stat.exists and os_family == 'Debian'

    - name: Сообщить, что Docker уже установлен (Linux)
      ansible.builtin.debug:
        msg: "Docker уже установлен"
      when: is_linux and docker_stat.stat.exists


- name: Запуск Deckhouse install контейнера и выполнение dhctl bootstrap внутри
  hosts: localhost
  gather_facts: no
  become: false
  vars:
    container_name: deckhouse-installer
    ssh_key_path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"

  tasks:
    - name: Очистка предыдущего контейнера (если существует)
      ansible.builtin.shell: |
        docker rm -f {{ container_name }} || true
      args:
        executable: /bin/bash

    - name: Запуск контейнера Deckhouse installer
      ansible.builtin.shell: |
        docker run -d \
          --name {{ container_name }} \
          -v "$(pwd)/config.yml:/config.yml" \
          -v "{{ lookup('env', 'HOME') }}/.ssh:/tmp/.ssh" \
          registry.deckhouse.ru/deckhouse/ce/install:stable \
          sleep infinity
      args:
        executable: /bin/bash

    - name: Копирование SSH-ключа внутрь контейнера (если требуется)
      ansible.builtin.shell: |
        docker exec -t {{ container_name }} mkdir -p /root/.ssh && \
        docker cp {{ ssh_key_path }} {{ container_name }}:/root/.ssh/id_rsa
      args:
        executable: /bin/bash

    - name: Получить параметры доступа к master
      set_fact:
        ssh_user: "{{ hostvars['master'].ansible_user }}"
        master_ip: "{{ hostvars['master'].ansible_host }}"

    - name: Выполнение dhctl bootstrap внутри контейнера
      ansible.builtin.shell: |
        docker exec -t {{ container_name }} dhctl destroy \
          --yes-i-am-sane-and-i-understand-what-i-am-doing \
          --ssh-user={{ ssh_user }} \
          --ssh-host={{ master_ip }} \
          --ssh-agent-private-keys=/root/.ssh/id_rsa \
      environment:
        DECKHOUSE_SUDO_PASSWORD: "{{ ansible_become_password }}"
        SSH_AUTH_SOCK: "{{ lookup('env', 'SSH_AUTH_SOCK') }}"
      args:
        executable: /bin/bash